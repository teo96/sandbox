// ==UserScript==
// @id             iitc-plugin-portals-list@teo96
// @name           teo96: show list of portals
// @version        0.0.3
// @namespace      https://github.com/breunigs/ingress-intel-total-conversion
// @updateURL      https://raw.github.com/teo96/sandbox/master/portals-list    
// @downloadURL    https://raw.github.com/teo96/sandbox/master/portals-list
// @description    Display a sortable list of all localized portails with team, level, resonators informations
// @include        https://www.ingress.com/intel*
// @match          https://www.ingress.com/intel*
// ==/UserScript==

function wrapper() {
// ensure plugin framework is there, even if iitc is not yet loaded
if(typeof window.plugin !== 'function') window.plugin = function() {};

// PLUGIN START ////////////////////////////////////////////////////////

// use own namespace for plugin
window.plugin.portalslist = function() {};
    
window.plugin.portalslist.listPortals = []; // structure : name, team, level, resonators = Array, Shields = Array, APgain

window.plugin.portalslist.getPortals = function(){
    
    var retval=false;
    window.plugin.portalslist.listPortals = [];
    //get portals informations from IITC
    $.each(window.portals, function(i, portal) {
        retval=true;
        var d = portal.options.details;   
        var name =  d.portalV2.descriptiveText.TITLE;
        var team = portal.options.team;
        var level = getPortalLevel(d);
    
    
        //var player = portal.options.details.captured.capturingPlayerId;
        //get resonators informations
        var resonators = []; // my local resonator array : reso level, reso deployed by, distance to portal, energy total, max 
         
        $.each(portal.options.details.resonatorArray.resonators, function(ind, reso) {
          if(reso) {  
            resonators[ind] = [reso.level, window.getPlayerName(reso.ownerGuid), reso.distanceToPortal, reso.energyTotal, RESO_NRG[reso.level]];
          } else { resonators[ind] = [0,'',0,0,0]; }
        }); 
        // Sort resonators array by resonator level
        resonators.sort(function (a, b) {return b[0] - a[0]});
                       
         //get shield informations 
           var shields = [];
       	$.each(d.portalV2.linkedModArray, function(ind, mod) {
           if (mod) 
              shields[ind] = mod.rarity.capitalize().replace('_', ' ');
           else
              shields[ind] = ''; 
        });
        
        var APgain= getAttackApGain(d).totalAp;
        var thisPortal = {'name':name,'team':team,'level':level,'resonators':resonators,'shields':shields,'APgain':APgain};
        window.plugin.portalslist.listPortals.push(thisPortal);

    });
    return retval;
  }
    
window.plugin.portalslist.displayPL = function() {   
    var html = '';
    if (window.plugin.portalslist.getPortals()) {
         html += window.plugin.portalslist.portalTable('team');

    } else {
    	console.log('KO');
    };
    alert('<div id="portalslist">' + html + '</div>');
    $(".ui-dialog").addClass('ui-dialog-portalslist');
  
    // Setup sorting
    $(document).on('click', '#portalslist table th', function() {    	
        $('#portalslist').html(window.plugin.portalslist.portalTable($(this).data('sort')));
  	});
    
 }
    
window.plugin.portalslist.portalTable = function(sortBy) {
    var portals=window.plugin.portalslist.listPortals;
        
    //tri du tableau window.plugin.portalslist.listPortals
    window.plugin.portalslist.listPortals.sort(function(a, b) {
        var retVal = 0;
        switch (sortBy) {
            case 'names':
                retVal = a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1;
                break;
            case 'r1':
                retVal = b.resonators[0][0] - a.resonators[0][0];
                break;
            case 'r2':
                retVal = b.resonators[1][0] - a.resonators[1][0];
                break;
            case 'r3':
                retVal = b.resonators[2][0] - a.resonators[2][0];
                break;
            case 'r4':
                retVal = b.resonators[3][0] - a.resonators[3][0];
                break;
            case 'r5':
                retVal = b.resonators[4][0] - a.resonators[4][0];
                break;
            case 'r6':
                retVal = b.resonators[5][0] - a.resonators[5][0];
                break;
            case 'r7':
                retVal = b.resonators[6][0] - a.resonators[6][0];
                break;
            case 'r8':
                retVal = b.resonators[7][0] - a.resonators[7][0];
                break;
            case 's1':
                retVal = a.shields[0].toLowerCase() > b.shields[0].toLowerCase() ? -1 : 1;
                break;
            case 's2':
                retVal = a.shields[1].toLowerCase() > b.shields[1].toLowerCase() ? -1 : 1;
                break;
            case 's3':
                retVal = a.shields[2].toLowerCase() > b.shields[2].toLowerCase() ? -1 : 1;
                break;
            case 's4':
                retVal = a.shields[3].toLowerCase() > b.shields[3].toLowerCase() ? -1 : 1;
                break;
            default:
                retVal = b[sortBy] - a[sortBy];    
                break;
        }
        
        return retVal;
    });  
    
    var sort = window.plugin.portalslist.portalTableSort;
    //console.log(portals);
    var html = '<table>'
    + '<tr><th ' + sort('names', sortBy) + '>Portal</th>' 
    + '<th ' + sort('level', sortBy) + '>Level</th>'
    + '<th ' + sort('team', sortBy) + '>Team</th>'
    + '<th ' + sort('r1', sortBy) + '>R1</th>'
    + '<th ' + sort('r2', sortBy) + '>R2</th>'
    + '<th ' + sort('r3', sortBy) + '>R3</th>'
    + '<th ' + sort('r4', sortBy) + '>R4</th>'
    + '<th ' + sort('r5', sortBy) + '>R5</th>'
    + '<th ' + sort('r6', sortBy) + '>R6</th>'
    + '<th ' + sort('r7', sortBy) + '>R7</th>'
    + '<th ' + sort('r8', sortBy) + '>R8</th>'
    + '<th ' + sort('s1', sortBy) + '>Shield 1</th>'
    + '<th ' + sort('s2', sortBy) + '>Shield 2</th>'
    + '<th ' + sort('s3', sortBy) + '>Shield 3</th>'
    + '<th ' + sort('s4', sortBy) + '>Shield 4</th>'
    + '<th ' + sort('APgain', sortBy) + '>AP Gain</th></tr>';
    
    
    $.each(portals, function(ind, portal) {
        html += '<tr class="' + (portal.team === 1 ? 'res' : 'enl') + '">'
        + '<td>' + portal.name + '</td>'
        + '<td class="L' + Math.floor(portal.level) +'">' +Math.floor(portal.level) + '</td>'
        + '<td style="text-align:center;">' + portal.team + '</td>'
        + '<td class="L' + portal.resonators[0][0] +'">' + portal.resonators[0][0] + '</td>'
        + '<td class="L' + portal.resonators[1][0] +'">' + portal.resonators[1][0] + '</td>'
        + '<td class="L' + portal.resonators[2][0] +'">' + portal.resonators[2][0] + '</td>'
        + '<td class="L' + portal.resonators[3][0] +'">' + portal.resonators[3][0] + '</td>'
        + '<td class="L' + portal.resonators[4][0] +'">' + portal.resonators[4][0] + '</td>'
        + '<td class="L' + portal.resonators[5][0] +'">' + portal.resonators[5][0] + '</td>'
        + '<td class="L' + portal.resonators[6][0] +'">' + portal.resonators[6][0] + '</td>'
        + '<td class="L' + portal.resonators[7][0] +'">' + portal.resonators[7][0] + '</td>'
        + '<td>' + portal.shields[0] + '</td>'
        + '<td>' + portal.shields[1] + '</td>'
        + '<td>' + portal.shields[2] + '</td>'
        + '<td>' + portal.shields[3] + '</td>'
        + '<td>' + portal.APgain + '</td>';
        
        html+= '</tr>';
    });
    html+='</table>';
    return html;
}

// A little helper functon so the above isn't so messy
window.plugin.portalslist.portalTableSort = function(name, by) {
  var retVal = 'data-sort="' + name + '"';
  if(name === by) {
    retVal += ' class="sorted"';
  }
  return retVal;
};


var setup =  function() {
  $('body').append('<div id="portalslist" style="display:none;"></div>');
  $('#toolbox').append('<a onclick="window.plugin.portalslist.displayPL()">Portals List</a>');
  $('head').append('<style>' + 
    '.ui-dialog-portalslist {position: absolute; top: 30px; left: 30px; max-width:800px !important; width:733px !important;}' +
    '#portalslist table {margin-top:10px;	border-collapse: collapse; empty-cells: show; width:100%; clear: both;}' +
'#portalslist table td, #portalslist table th {border-bottom: 1px solid #0b314e; padding:3px; color:white; background-color:#1b415e}' +
    '#portalslist table tr.res td {  background-color: #005684; }' +
    '#portalslist table tr.enl td {  background-color: #017f01; }' +
    '#portalslist table th { text-align:center;}' +
    '#portalslist table td.L1 { background-color: #FECE5A !important; text-align:center; }' +
	'#portalslist table td.L2 { background-color: #9900FF !important; text-align:center; }' +
	'#portalslist table td.L3 { background-color: #FF7315 !important; text-align:center; }' +
	'#portalslist table td.L4 { background-color: #E40000 !important; text-align:center; }' +
	'#portalslist table td.L5 { background-color: #FD2992 !important; text-align:center; }' +
	'#portalslist table td.L6 { background-color: #EB26CD !important; text-align:center; }' +
	'#portalslist table td.L7 { background-color: #C124E0 !important; text-align:center; }' +
	'#portalslist table td.L8 { background-color: #9627F4 !important; text-align:center; }' +                   
    '#portalslist table th { cursor:pointer; text-align: right;}' +
    '#portalslist table th:nth-child(1) { text-align: left;}' +
    '#portalslist table th.sorted { color:#FFCE00; }' +
    '#portalslist .disclaimer { margin-top:10px; font-size:10px; }' +
    '</style>');
}

// PLUGIN END //////////////////////////////////////////////////////////

if(window.iitcLoaded && typeof setup === 'function') {
  setup();
} else {
  if(window.bootPlugins)
    window.bootPlugins.push(setup);
  else
    window.bootPlugins = [setup];
}
} // wrapper end
// inject code into site context
var script = document.createElement('script');
script.appendChild(document.createTextNode('('+ wrapper +')();'));
(document.body || document.head || document.documentElement).appendChild(script);
